name: Verification of examples

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
#  schedule:
#    - cron: '0 5 * * 7' # At 5:00 UTC on Sunday.

env:
  GITHUB_ACTIONS: true

jobs:
  build:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        java: [ '17' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1 # https://github.com/actions/setup-java
        with:
          java-version: ${{ matrix.java }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Create demo service
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :demo-microservice:build :demo-microservice:dockerTag

      - name: Hello World
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :hello-world:check

      - name: Apache Cassandra
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :cassandra:check

      - name: Elasticsearch
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :elasticsearch:check

      - name: Graphite
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :graphite:check

      - name: InfluxDB
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :influxdb:check

      # Failing on Github: ERROR: for healthy_checker  Container "abaf099899fa" is unhealthy
      #- name: Jakarta EE Messaging
      #  if: always()
      #  uses: gradle/gradle-build-action@v3.3.2
      #  with:
      #    arguments: :jakarta-ee-messaging:check

      - name: Java Messaging Service
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :jms:check

      - name: Apache Kafka
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :kafka:check

      - name: MongoDB
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :mongodb:check

      - name: Netty - MQTT
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :netty-mqtt:check

      - name: Netty - TCP
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :netty-tcp:check

      - name: R2DBC Jasync
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :r2dbc-jasync:check

      - name: RabbitMQ
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :rabbitmq:check

      - name: Redis
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :redis:check

      - name: Netty - Quickstart HTTP
        if: always()
        uses: gradle/gradle-build-action@v3.3.2
        with:
          arguments: :quickstart-http:check

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/**/*.xml'
          fail_on_failure: true
          include_passed: true
          annotations_limit: 0
          summary: true
          detailed_summary: true